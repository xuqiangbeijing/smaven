<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
    <!-- 启动扫描所有的controller -->
    <context:component-scan base-package="com.business">
	   <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	   <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
    
    <!--  主要作用于@Controller，激活该模式
    	下面是一种简写形式，完全可以手动配置替代这种简写形式；
    	 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
    	   是spring MVC为@Controllers分发请求所必须的
     -->
    <mvc:annotation-driven/>
    
    
    <!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观-->
<!--      <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/sys/*"/>
    		<mvc:mapping path="/api/*"/>
			<bean  class="com.project.interceptor.MyInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors> -->
    
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理   **多级目录   jsp中写引用路径用  <%=basePath%>res/ js img 等 -->
    <mvc:resources location="/resources/**" mapping="/res/**"/>
    
    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/view/"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- *************rest方式配置   begin*********** 方法前加@ResponseBody，返回对象自动转换为json数据 -->
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
	</bean>
	 <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>
	</bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter"/>
				<ref bean="stringConverter"/>  
			</list>
		</property>
	</bean>
	<bean id="methodHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter"/>
				<ref bean="stringConverter"/>
			</list>
		</property>
	</bean>
	<!-- *************rest方式配置   end***********  -->
    
</beans>